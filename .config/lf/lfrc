# lf settings

# Basic vars
set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons true
set period 1
set hiddenfiles ".*"
set hidden true


# cmds/funcs
cmd open ${{
	case $(file --mime-type $f -b) in
		image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/nuòò 2>&1 ;;
		text/*) $EDITOR $fx ;;
        	*) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
	esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

## copy selected files to location
#cmd copyto ${{
#	clear; tput cup $(($(tput lines)/3)); tput bold # ?????
#	set -f
#	clear; echo "Copy to where?"
#	dest="$(cut -d' ' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/shell/dm-dirs | fzf | sed 's|~|$HOME|' )" &&
#	for x in $fx; do
#	eval cp -ivr \"$x\" \"$dest\"
#	done &&
#	notify-send "File(s) copied." "File(s) copied to $dest."
#}}
#
#
## move selected files to location
#cmd moveto ${{
#	clear; tput cup $(($(tput lines)/3)); tput bold # ?????
#	set -f
#	clear; echo "Move to where?"
#	dest="$(cut -d' ' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/shell/dm-dirs | fzf | sed 's|~|$HOME|' )" &&
#	for x in $fx; do
#	eval mv -iv \"$x\" \"$dest\"
#	done &&
#	notify-send "File(s) moved." "File(s) moved to $dest."
#}}

# define a custom 'delete' command
 cmd delete ${{
     set -f
     printf "$fx\n"
     printf "delete?[y/n]"
     read ans
     [ $ans = "y" ] && rm -rf $fx
 }}


# mappings

map D delete
map E extract
map C copyto
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <c-s> set hidden!
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map <c-e> down
map <c-y> up



